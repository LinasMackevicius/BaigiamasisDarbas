﻿
@page
@model projektas.Pages.Notes.InsightNotesModel
@{
	ViewData["Title"] = "Insight Notes";
}

<h2>Insight Notes</h2>

<!-- Top-left button -->
<div class="p-3">
	<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#noteModal">
		Add new note
	</button>
</div>


<div class="container">
	<div class="row justify-content-center">
		<div class="col-md-7">
			<div class="accordion" id="InsightNotesAccordion">
				@foreach (var note in Model.InsightNotesList)
				{
					var noteId = $"note-{note.Id}";
					<div class="accordion-item mb-5" id="@noteId">
						<h2 class="accordion-header" id="heading-@noteId">
							<button class="accordion-button collapsed"
									type="button"
									data-bs-toggle="collapse"
									data-bs-target="#collapse-@noteId"
									aria-controls="collapse-@noteId">
								<strong>@note.Title</strong>
							</button>
						</h2>
						<div id="collapse-@noteId"
							 class="accordion-collapse collapse"
							 aria-labelledby="heading-@noteId">
							<div class="accordion-body d-flex justify-content-between align-items-start">
								<div class="w-100">
									<div class="text-wrap text-break mb-2" style="white-space: pre-wrap; word-wrap: break-word;">
										@note.Content
									</div>

									@if (note.Session != null)
									{
										<div class="mt-2">
											<strong>From Session:</strong>
											<a href="/Sessions/Past_Sessions#session-@note.Session.Id">
												@note.Session.SessionDate.ToString("yyyy.MM.dd") - @note.Session.Place
											</a>
										</div>
									}
								</div>

								<!-- Three Dots Menu -->
								<div class="dropdown ms-3">
									<button class="btn btn-sm btn-light" type="button" id="dropdownMenuButton-@note.Id" data-bs-toggle="dropdown" aria-expanded="false">
										&#x22EE;
									</button>
									<ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton-@note.Id">
										<li>
											<button class="dropdown-item"
													type="button"
													data-bs-toggle="modal"
													data-bs-target="#noteModal"
													data-note-id="@note.Id"
													data-note-title="@note.Title"
													data-note-content="@note.Content"
													data-note-session-id="@note.SessionId">
												✏️ Edit
											</button>

										</li>
										<li>
											<button type="button"
													class="dropdown-item text-danger delete-button"
													data-bs-toggle="modal"
													data-bs-target="#deleteModal"
													data-note-id="@note.Id">
												🗑️ Delete
											</button>

										</li>
									</ul>
								</div>
							</div>
						</div>
					</div>
				}
			</div>
		</div>
	</div>
</div>



<script>
	document.addEventListener('DOMContentLoaded', function () {
		const noteModal = document.getElementById('noteModal');

		noteModal.addEventListener('show.bs.modal', function (event) {
			const button = event.relatedTarget;
			const noteId = button.getAttribute('data-note-id');
			const noteTitle = button.getAttribute('data-note-title');
			const noteContent = button.getAttribute('data-note-content');
			const noteSessionId = button.getAttribute('data-note-session-id'); // NEW

			document.getElementById('Note_Id').value = noteId || 0;
			document.getElementById('Note_Title').value = noteTitle || '';
			document.getElementById('Note_Content').value = noteContent || '';

			// 💥 Set the selected session
			if (noteSessionId) {
				document.getElementById('Note_SessionId').value = noteSessionId;
			} else {
				document.getElementById('Note_SessionId').selectedIndex = 0;
			}

			// Update modal title
			document.getElementById('noteModalLabel').innerText =
				noteId ? 'Edit Note' : 'New Note';
		});
	});

	document.addEventListener('DOMContentLoaded', function () {
		const hash = window.location.hash;
		if (hash && hash.startsWith("#note-")) {
			const noteId = hash.substring(1); // remove "#"
			const collapseEl = document.getElementById("collapse-" + noteId);
			const buttonEl = document.querySelector(`[data-bs-target="#collapse-${noteId}"]`);
			const parentItem = document.getElementById(noteId); // The outer accordion-item

			if (collapseEl && buttonEl && parentItem) {
				// Force expand like Past Sessions
				buttonEl.classList.remove('collapsed');
				buttonEl.setAttribute('aria-expanded', 'true');
				collapseEl.classList.add('show');

				// Scroll to view
				parentItem.scrollIntoView({ behavior: 'smooth' });

				// Add glowing animation
				parentItem.classList.add('highlighted-note');

				// Optional: Remove glow after 5 seconds
				setTimeout(() => {
					parentItem.classList.remove('highlighted-note');
				}, 5000);
			}
		}
	});


</script>

@await Html.PartialAsync("SharedComponents/_NoteModal", Model)

@await Html.PartialAsync("SharedComponents/_DeleteModal", Model)
