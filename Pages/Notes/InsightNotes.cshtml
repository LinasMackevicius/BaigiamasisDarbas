﻿
@page
@model projektas.Pages.Notes.InsightNotesModel
@{
	ViewData["Title"] = "Insight Notes";
}

<h2>Insight Notes</h2>

<!-- Top-left button -->
<div class="p-3">
	<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#noteModal">
		Add new note
	</button>
</div>


<div class="container">
	<div class="row justify-content-center">
		<div class="col-md-7">
			<div class="accordion" id="InsightNotesAccordion">
				@foreach (var note in Model.InsightNotesList)
				{
					var noteId = $"note-{note.Id}";
					<div class="accordion-item mb-5">
						<h2 class="accordion-header" id="heading-@noteId">
							<button class="accordion-button collapsed"
									type="button"
									data-bs-toggle="collapse"
									data-bs-target="#collapse-@noteId"
									aria-controls="collapse-@noteId">
								<strong>@note.Title</strong>
							</button>
						</h2>
						<div id="collapse-@noteId"
							 class="accordion-collapse collapse"
							 aria-labelledby="heading-@noteId">
							<div class="accordion-body d-flex justify-content-between align-items-start">
								<div class="w-100">
									<div class="text-wrap text-break mb-2" style="white-space: pre-wrap; word-wrap: break-word;">
										@note.Content
									</div>

									@if (note.Session != null)
									{
										<div class="mt-2">
											<strong>From Session:</strong>
											<a href="/Sessions/Past_Sessions#session-@note.Session.Id">
												@note.Session.SessionDate.ToString("yyyy.MM.dd") - @note.Session.Place
											</a>
										</div>
									}
								</div>

								<!-- Three Dots Menu -->
								<div class="dropdown ms-3">
									<button class="btn btn-sm btn-light" type="button" id="dropdownMenuButton-@note.Id" data-bs-toggle="dropdown" aria-expanded="false">
										&#x22EE;
									</button>
									<ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton-@note.Id">
										<li>
											<button class="dropdown-item"
													type="button"
													data-bs-toggle="modal"
													data-bs-target="#noteModal"
													data-note-id="@note.Id"
													data-note-title="@note.Title"
													data-note-content="@note.Content">
												✏️ Edit
											</button>
										</li>
										<li>
											<button type="button"
													class="dropdown-item text-danger"
													data-bs-toggle="modal"
													data-bs-target="#deleteModal"
													data-note-id="@note.Id">
												🗑️ Delete
											</button>
										</li>
									</ul>
								</div>
							</div>
						</div>
					</div>
				}
			</div>
		</div>
	</div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="Delete">
                <input type="hidden" id="deleteNoteId" name="Note.Id" />
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this note?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
	document.addEventListener('DOMContentLoaded', function () {
		const noteModal = document.getElementById('noteModal');

		noteModal.addEventListener('show.bs.modal', function (event) {
			const button = event.relatedTarget;
			const noteId = button.getAttribute('data-note-id');
			const noteTitle = button.getAttribute('data-note-title');
			const noteContent = button.getAttribute('data-note-content');

			document.getElementById('Note_Id').value = noteId || 0;
			document.getElementById('Note_Title').value = noteTitle || '';
			document.getElementById('Note_Content').value = noteContent || '';

			// Update modal title
			document.getElementById('noteModalLabel').innerText =
				noteId ? 'Edit Note' : 'New Note';

			// Show/hide delete button
			const deleteBtn = noteModal.querySelector('[name="handler"][value="delete"]');
			if (noteId) {
				deleteBtn.classList.remove('d-none');
			} else {
				deleteBtn.classList.add('d-none');
			}
		});
	});


    const deleteModal = document.getElementById('deleteModal');
    deleteModal.addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget;
        const noteId = button.getAttribute('data-note-id');
        document.getElementById('deleteNoteId').value = noteId;
    });

</script>

@await Html.PartialAsync("SharedComponents/_NoteModal", Model)
